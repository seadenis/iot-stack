services:
  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/config/passwd:/mosquitto/config/passwd
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
      - /etc/letsencrypt/live/dansu.ru/fullchain.pem:/mosquitto/certs/fullchain.pem
      - /etc/letsencrypt/live/dansu.ru/privkey.pem:/mosquitto/certs/privkey.pem
    ports:
      - "1883:1883"
      - "8883:8883"
    labels:
      com.centurylinklabs.watchtower.enable: "${WATCHTOWER_LABEL}"

  influxdb:
    image: influxdb:1.8
    restart: unless-stopped
    volumes:
      - influxdb-data:/root
      - ./secrets:/run/secrets
      - ./influxdb/init-scripts:/docker-entrypoint-initdb.d
      - ./influxdb/backup:/backup
      - ./influxdb/etc:/etc/influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_TOKEN}
      - INFLUXDB_COORDINATOR_MAX_SELECT_POINT=100
      - INFLUXDB_HTTP_MAX_ROW_LIMIT=100000
      - INFLUXDB_DB=mqtt_data
    labels:
      com.centurylinklabs.watchtower.enable: "${WATCHTOWER_LABEL}"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8086/ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s

  mqtt2influx:
    build: ./python-ingest
    restart: unless-stopped
    depends_on:
      influxdb: { condition: service_started }
      mosquitto: { condition: service_started }
    environment:
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - INFLUX_HOST=influxdb
      - INFLUX_PORT=8086
    volumes:
      - ./secrets:/run/secrets:ro

  grafana:
    image: grafana/grafana:latest
    user: root
    restart: unless-stopped
    depends_on:
      influxdb: { condition: service_started }
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/provisioning/dashboards/json:/var/lib/grafana/dashboards/json:ro
      - grafana-storage:/var/lib/grafana
      - ./grafana/custom.ini:/etc/grafana/custom.ini
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD}
      - GF_SERVER_ROOT_URL=https://dansu.ru
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_USERS_ALLOW_SIGN_UP=false
    labels:
      com.centurylinklabs.watchtower.enable: "${WATCHTOWER_LABEL}"
    expose: ["3000"]

  nginx:
    image: nginx:stable
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    depends_on: [grafana]
    labels:
      com.centurylinklabs.watchtower.enable: "${WATCHTOWER_LABEL}"

  telegraf:
    image: telegraf:1.30
    restart: unless-stopped
    user: telegraf:991
    depends_on:
      influxdb: { condition: service_started }
      mosquitto: { condition: service_started }
    container_name: telegraf
    network_mode: host
    pid: host
    userns_mode: host
    environment:
      - HOST_PROC=/proc
      - MQTT_PW=${MQTT_PW}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

volumes:
  mosquitto-data:
  mosquitto-log:
  influxdb-data:
  kapacitor-data:
  grafana-storage:
